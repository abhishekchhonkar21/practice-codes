#include<iostream>
using namespace std;

const int max_size = 100;
class queue{
    
    int arr[max_size];
   
    int front;
    int rear;
public:
   
    queue(){
        front = -1;
        rear = -1;
    }
    bool isfull(){
        return rear == max_size - 1;
    }
    bool isEmpty(){
        return front == -1 and rear == -1;
    }
    
    void enqueue(int x){
        if(isfull()){
            cout<<"queue is full ";
            return;
        }
        if(isEmpty()){
            front = 0; rear = 0;
        }
        else{
            rear++;
        }
        arr[rear] = x;
    }
    
    void dequeue(){
        
        if(isEmpty()){
            cout<<"the queue is empty ";
            return;
        }
        if(front == rear){
            front =-1;
            rear =-1;
        }
        else{
            front++;
        }
    }
    int peek(){
        if(isEmpty()){
            cout<<"queue is empty "<<endl;
            return -1;
        }
        return arr[front];
    }
    
    void print(){
        if(isEmpty()){
            cout<<"queue is empty "<<endl;
            return;
        }
        cout<<"queue elements : ";
        for(int i=front; i<=rear; i++){
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }
};

int main(){
    
    queue q;
    q.enqueue(1);
        q.enqueue(2);
        q.enqueue(3);
        q.print(); // Queue elements: 1 2 3
        q.dequeue();
        q.print(); // Queue elements: 2 3
        cout << "Front element: " << q.peek() << endl; // Front element: 2
        return 0;
    
}
