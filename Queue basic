//header file



#ifndef queue_h
#define queue_h

class queue{
    
    int *arr;
    int cs;
    int ms;
    int front;
    int rear;
public:
    queue(int default_size){
        ms = default_size;
        arr = new int[ms];
        cs = 0;
        front = 0;
        rear = ms-1;
        
    }
    
    bool full(){
        return cs==ms;
    }
    bool empty(){
        return cs==0;
    }
    
    
    void push(int data){
        if(!full()){
            //take rear to the next index
            rear = (rear+1)%ms;
            arr[rear] = data;
            cs++;
        }
        
    }
    
    void pop(){
        if(!empty()){
            //take the front to next index
            front = (front+1)%ms;
            cs--;
            
        }}
        int frontX(){
            return arr[front];
        }
    
    
};
#endif /* queue_h */



//main file

#include<iostream>
#include"queue.h"
using namespace std;

int main(){
    
    
    queue t(7);
    t.push(1);
    t.push(12);
    t.push(13);
    t.push(14);
    t.push(15);
    t.push(16);
    t.push(17);
    t.pop();
    t.pop();
    t.push(100);
    while(!t.empty()){
        cout<<t.frontX()<<endl;
        t.pop();
    }
    
    
}
