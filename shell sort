#include<iostream>
using namespace std;


void shellSort(int arr[], int n) {
    // Start with a large gap, then reduce the gap
    for (int gap = n / 2; gap > 0; gap /= 2) {
        // Do a gapped insertion sort for this gap size.
        // The first gap elements a[0..gap-1] are already in gapped order
        // keep adding one more element until the entire array is gap sorted
        for (int i = gap; i < n; i++) {
            // add arr[i] to the elements that have been gap sorted
            // save arr[i] in temp and make a hole at position i
            int temp = arr[i];
            // shift earlier gap-sorted elements up until the correct location for arr[i] is found
            int j;
            for (j = i; j >= gap && arr[j - gap] > temp; j -= gap)
                arr[j] = arr[j - gap];
            // put temp (the original arr[i]) in its correct location
            arr[j] = temp;
        }
    }
}

int main(){
    
    
    int arr[6] = {6,4,2,9,5,0};
    shellSort(arr, 6);
    
    for(int i=0; i<6;i++){
        cout<<arr[i]<<" ";
    }
}
