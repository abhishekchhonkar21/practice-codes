//Q1 (INCOMPLETE)

#include<iostream>
#include<vector>
#include<string>
using namespace std;


    
    int length( string s){
        int size=0;
         for(int i=0; s[i]!='\0'; i++){
             size++;
         }
        return size;
    }
    void lowercase(string s){
        for(int i=0; s[i]!='\0'; i++){
            int x;
            x=s[i];
            s[i]=x+32;
        }
        cout<<s;
    }

void count(string s){
    int n=0,v=0;
    
    for(int i =0; s[i]!='\0'; i++){
        if(s[i]==' '){
            n++;
        }
        if(s[i]=='a' or s[i]=='e' or s[i]=='i' or s[i]=='o' or s[i]=='u'){
            v++;
        }
    }
    cout<<"number of word is "<<n+1<<endl;
    cout<<"number of vowel is "<<v;
}
    

int palCheck(string s){
    
    int st=0;
    int e =length(s)-1;
    while(st<e){
        if(s[st]!=s[e]){
            return -1;
        }
           st++; e--;
    }
           return 0;
}
    
void reverse(string s){
    cout<<"the reverse of the string is -> ";
    for(int i=length(s)-1; i>=0; i--){
        cout<<s[i];
    }
}

void duplicate(string str){
int l=str.length();
  for(int i = 0; i <l; i++) {
    count = 1;

    for(int j = i+1; j < l; j++) {
      if(str[i] == str[j] && str[i] != ' ') {
     count++;
       str[j] = '0';
    }
  }

   if(count > 1 && str[i] != '0')
    cout<<str;
}

   
    
}
int main(){
    
    string s;
    cin>>s;
    duplicate(s);
    cout<<endl;
    
    
}

//Q2- write a program to find factorial of a number recursively

#include<iostream>

using namespace std;
int facto(int n){
    
    while(n==1 or n==0){
        return 1;
    }
     
    return n*facto(n-1);
    
}
int main(){
    int z;
    cin>>z;
    z=facto(z);
    cout<<"the factorial of the number is "<<z<<endl;;
    
}

Q3 implement combination formula nCr

#include<iostream>

using namespace std;
int facto(int n){
    
    while(n==1 or n==0){
        return 1;
    }
     
    return n*facto(n-1);
    
}
int main(){
    int n,r;
    cin>>n>>r;
    int z=facto(n);
    int k = facto(n-r)*facto(r);
    cout<<"nCr is "<<z/k<<endl;
}

//Q3 implement tower of hanoi

#include<iostream>
using namespace std;

void tower(int n, char s, char a, char d) {
   static int count = 0;
   if(n == 1) {
      count++;
      cout << count<< ". Move disk " << n << " from "<<s <<" to "<<d<<endl;
      return;
   }

   tower(n-1, s, d, a);
   count++;
   cout << count<< ". Move disk " << n << " from "<<s <<" to "<<d<<endl;
   tower(n-1, a, s, d);
}

int main() {
   int n;
   cout << "number of disks: ";
   cin >> n;
   tower(n, 'A','B','C');
}


Q6- implement febonacci series

#include<iostream>
using namespace std;

int fibo(int n){
    if(n==0 or n==1){
        return n;
        
    }
    else{
        
        return fibo(n-1)+fibo(n-2);}
}
int main() {
    int k;
    cin>>k;
    cout<<"fibonacci series till nth digit "<<endl;
    for(int i=0; i<k; i++){
        cout<<fibo(i)<<" ";
    }
}

