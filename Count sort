#include<iostream>
using namespace std;

void countingSort(int arr[], int size) {
    // Find the maximum element in the array
    int max_element = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] > max_element) {
            max_element = arr[i];
        }
    }

    // Create a count array and initialize all elements to 0
    int count[max_element + 1] = {0};

    // Count the occurrences of each element in the input array
    for (int i = 0; i < size; i++) {
        count[arr[i]]++;
    }

    // Modify the count array to store the actual position of each element in the sorted array
    for (int i = 1; i <= max_element; i++) {
        count[i] += count[i - 1];
    }

    // Create a temporary array to store the sorted output
    int output[size];

    // Build the sorted array by iterating through the input array and placing elements in their correct positions
    for (int i = size - 1; i >= 0; i--) {
        output[count[arr[i]] - 1] = arr[i];
        count[arr[i]]--;
    }

    // Copy the sorted elements from the temporary array back to the input array
    for (int i = 0; i < size; i++) {
        arr[i] = output[i];
    }
}

int main() {
    int arr[] = {4, 2, 2, 8, 3, 3, 1};
    int size = sizeof(arr) / sizeof(arr[0]);

    countingSort(arr, size);

    cout << "Sorted array: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}
