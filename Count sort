#include <iostream>

using namespace std;

void countSort(int array[], int size) {

  // Create a count array to store the count of each element
  // The count array will have one entry for each possible element in the input array
  int count[size + 1];
  memset(count, 0, sizeof(count));

  // Iterate over the input array and increment the count of the corresponding element in the count array
  // This will count the number of times each element appears in the input array
  for (int i = 0; i < size; i++) {
    count[array[i]]++;
  }

  // Iterate over the count array and store the elements in the output array
  // The output array will be sorted, with the elements with the highest counts appearing first
  int output[size];
  int j = 0;
  for (int i = 0; i <= size; i++) {
    for (int k = 0; k < count[i]; k++) {
      output[j++] = i;
    }
  }

  // Copy the output array to the input array
  // This will overwrite the original array with the sorted elements
  for (int i = 0; i < size; i++) {
    array[i] = output[i];
  }
}

int main() {

  // Create an array of size 10
  int array[] = {1, 10, 3, 4, 2, 9, 7, 8, 5, 6};

  // Print the original array
  cout << "Original array: ";
  for (int i = 0; i < 10; i++) {
    cout << array[i] << " ";
  }
  cout << endl;

  // Perform count sort on the array
  countSort(array, 10);

  // Print the sorted array
  cout << "Sorted array: ";
  for (int i = 0; i < 10; i++) {
    cout << array[i] << " ";
  }
  cout << endl;

  return 0;
}

